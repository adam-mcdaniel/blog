{"expireTime":9007200870961765000,"key":"transformer-remark-markdown-ast-f8ae451bae97be2e922f5c1e25f0a49d-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"After reading about parser combinator libraries, I started to write my own! I eventually got it into a working state, and published it on crates.io under the name ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":164,"offset":164},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">honeycomb</code>","position":{"start":{"line":2,"column":164,"offset":164},"end":{"line":2,"column":175,"offset":175},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2,"column":175,"offset":175},"end":{"line":2,"column":176,"offset":176},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":176,"offset":176},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can find it ","position":{"start":{"line":4,"column":1,"offset":178},"end":{"line":4,"column":17,"offset":194},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/adam-mcdaniel/honeycomb","children":[{"type":"text","value":"here","position":{"start":{"line":4,"column":18,"offset":195},"end":{"line":4,"column":22,"offset":199},"indent":[]}}],"position":{"start":{"line":4,"column":17,"offset":194},"end":{"line":4,"column":67,"offset":244},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":".","position":{"start":{"line":4,"column":67,"offset":244},"end":{"line":4,"column":68,"offset":245},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":178},"end":{"line":4,"column":68,"offset":245},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"My absolute FAVORITE thing about honeycomb is that it doesn’t depend on anything, not even the standard library! Im super proud of that fact :)","position":{"start":{"line":6,"column":1,"offset":247},"end":{"line":6,"column":144,"offset":390},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":247},"end":{"line":6,"column":144,"offset":390},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To test honeycomb’s capabilities, I started work on a simple compiler for an object oriented and functional programming language. Within a three or so hours of work, the compiler was fully implemented! This was a huge surprise to me because working with Lark-Parser in Python would take a full days work.","position":{"start":{"line":8,"column":1,"offset":392},"end":{"line":8,"column":305,"offset":696},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":392},"end":{"line":8,"column":305,"offset":696},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The you can find the language ","position":{"start":{"line":10,"column":1,"offset":698},"end":{"line":10,"column":31,"offset":728},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/adam-mcdaniel/xassembler","children":[{"type":"text","value":"here","position":{"start":{"line":10,"column":32,"offset":729},"end":{"line":10,"column":36,"offset":733},"indent":[]}}],"position":{"start":{"line":10,"column":31,"offset":728},"end":{"line":10,"column":82,"offset":779},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}},{"type":"text","value":".","position":{"start":{"line":10,"column":82,"offset":779},"end":{"line":10,"column":83,"offset":780},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":698},"end":{"line":10,"column":83,"offset":780},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It’s dynamically typed, and is compiled to a custom 10 instruction set virtual machine code implemented in Rust. After compiling my language to Rust, the output Rust code can then be lowered to native executable code!","position":{"start":{"line":12,"column":1,"offset":782},"end":{"line":12,"column":218,"offset":999},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":782},"end":{"line":12,"column":218,"offset":999},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Although this was just a test, I am VERY interested in writing a compiled scripting language that acts as a cross platform version of Bash. I’ve drawn a lot of my inspiration from Groovy, which is a language commonly used as a more robust replacement for shell scripts. I think a cross platform scripting language and shell would be a wonderful advancement in programming technology, and I can’t wait to investigate this topic further.","position":{"start":{"line":14,"column":1,"offset":1001},"end":{"line":14,"column":436,"offset":1436},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":1001},"end":{"line":14,"column":436,"offset":1436},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":15,"column":1,"offset":1437}}}}